{
  "info": {
    "name": "InstuLearn API – Supports",
    "_postman_id": "a38e1a0d-0000-4000-9000-collection-supports",
    "description": "Bilingual collection for US_051–US_055. / Çift dilli koleksiyon.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "US_051 – GET /supports",
      "description": "EN: List supports with valid/invalid token.\nTR: Geçerli/geçersiz token ile destek kayıtlarını listeleme.",
      "item": [
        {
          "name": "US_051_Positive_GET_supports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/supports",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "supports"
              ]
            },
            "description": "EN: Expect 200, remark='success' and fields exist.\nTR: 200, remark='success' ve alanların varlığı doğrulanır."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.test(\"remark is success\", () => json.remark === 'success');",
                  "const need = ['user_id','webinar_id','department_id','title','status','created_at','updated_at','status_order','id','full_name','role_name'];",
                  "pm.test('Fields exist in at least one item', () => Array.isArray(json.data) && json.data.length>0 && need.every(k => k in json.data[0]));",
                  "// TR: Durum kodu 200 ve remark 'success'. Alanlar ilk kayıt içinde mevcut olmalı."
                ]
              }
            }
          ]
        },
        {
          "name": "US_051_Negative_InvalidToken_GET_supports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{invalid_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/supports",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "supports"
              ]
            },
            "description": "EN: Expect 401 Unauthenticated.\nTR: 401 Unauthenticated beklenir."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401', () => pm.response.code === 401);",
                  "pm.test('Message Unauthenticated', () => (pm.response.json().message||'') === 'Unauthenticated.');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "US_052 – GET /support/{id}",
      "description": "EN: Get support detail by ID. / TR: ID ile destek detayını getir.",
      "item": [
        {
          "name": "US_052_Positive_GET_support_id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{support_id}}"
              ]
            },
            "description": "EN: 200 success; validate fields.\nTR: 200 success; alanlar doğrulanır."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.test(\"remark is success\", () => json.remark === 'success');",
                  "const need = ['id','user_id','webinar_id','department_id','title','status','created_at','updated_at','status_order','full_name','role_name'];",
                  "pm.test('Fields exist', () => need.every(k => k in json.data));",
                  "// Save ID for chaining",
                  "if (json.data && json.data.id) pm.environment.set('support_id', json.data.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_052_Negative_UnregisteredId_GET_support_id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{unregistered_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{unregistered_id}}"
              ]
            },
            "description": "EN: 203 failed, message about not found.\nTR: 203 failed, bu id için kayıt yok."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);",
                  "const j = pm.response.json();",
                  "pm.test('remark failed', () => j.remark === 'failed');",
                  "pm.test('message matches', () => (j.message||'').toLowerCase().includes('not support message'));"
                ]
              }
            }
          ]
        },
        {
          "name": "US_052_Negative_NoId_GET_support",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                ""
              ]
            },
            "description": "EN: 203 failed, 'No id'. TR: 203 failed, 'No id'."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);",
                  "pm.test('No id message', () => (pm.response.json().message||'').toLowerCase().includes('no id'));"
                ]
              }
            }
          ]
        },
        {
          "name": "US_052_Negative_InvalidToken_GET_support_id",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{invalid_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{support_id}}"
              ]
            },
            "description": "EN: 401 Unauthenticated. TR: 401 Yetkisiz."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401', () => pm.response.code === 401);",
                  "pm.test('Message Unauthenticated', () => (pm.response.json().message||'') === 'Unauthenticated.');"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "US_053 – POST /addSupport",
      "description": "EN: Create a support record. / TR: Yeni destek kaydı oluştur.",
      "item": [
        {
          "name": "US_053_Positive_POST_addSupport",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/addSupport",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "addSupport"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"{{title}}\",\n  \"department_id\": \"{{department_id}}\",\n  \"message\": \"{{message}}\"\n}"
            },
            "description": "EN: Expect 200 success, 'Successfully Added.' Save id.\nTR: 200 success, 'Successfully Added.' ID kaydedilir."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', () => pm.response.code === 200);",
                  "const j = pm.response.json();",
                  "pm.test('remark success', () => j.remark === 'success');",
                  "pm.test('message added', () => (j.message||'').toLowerCase().includes('successfully added'));",
                  "if (j.data && j.data.id) pm.environment.set('support_id', j.data.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_053_Negative_422_POST_addSupport_missing",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/addSupport",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "addSupport"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "description": "EN: 422 validation error.\nTR: 422 doğrulama hatası."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 422', () => pm.response.code === 422);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_053_Negative_401_POST_addSupport_invalid_token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{invalid_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/addSupport",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "addSupport"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"{{title}}\", \"department_id\": \"{{department_id}}\", \"message\": \"{{message}}\"}"
            },
            "description": "EN: 401 Unauthenticated.\nTR: 401 Yetkisiz."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401', () => pm.response.code === 401);",
                  "pm.test('Message Unauthenticated', () => (pm.response.json().message||'') === 'Unauthenticated.');"
                ]
              }
            }
          ]
        },
        {
          "name": "US_053_Verify_GET_support_id_after_add",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{support_id}}"
              ]
            },
            "description": "EN: Verify created record by id.\nTR: Eklenen kaydı id ile doğrula."
          }
        }
      ]
    },
    {
      "name": "US_054 – PATCH /updateSupport/{id}",
      "description": "EN: Update a support record. / TR: Destek kaydı güncelle.",
      "item": [
        {
          "name": "US_054_Positive_PATCH_updateSupport_id",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/updateSupport/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "updateSupport",
                "{{support_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Title\",\n  \"department_id\": \"1\",\n  \"message\": \"Updated message\"\n}"
            },
            "description": "EN: 200 success, Updated Successfully.\nTR: 200 success, Updated Successfully."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', () => pm.response.code === 200);",
                  "const j = pm.response.json();",
                  "pm.test('remark success', () => j.remark === 'success');",
                  "pm.test('message updated', () => (j.message||'').toLowerCase().includes('updated'));"
                ]
              }
            }
          ]
        },
        {
          "name": "US_054_Negative_203_NoInfo_PATCH_updateSupport_id",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/updateSupport/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "updateSupport",
                "{{support_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "description": "EN: 203 failed - no information to update.\nTR: 203 failed - güncellenecek bilgi yok."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_054_Negative_203_UnregisteredId_PATCH_updateSupport_id",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/updateSupport/{{unregistered_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "updateSupport",
                "{{unregistered_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"A\", \"department_id\": \"1\", \"message\": \"B\"}"
            },
            "description": "EN: 203 failed - id not found.\nTR: 203 failed - id bulunamadı."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_054_Negative_203_NoId_PATCH_updateSupport",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/updateSupport/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "updateSupport",
                ""
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"A\", \"department_id\": \"1\", \"message\": \"B\"}"
            },
            "description": "EN: 203 failed - No id.\nTR: 203 failed - No id."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_054_Negative_401_InvalidToken_PATCH_updateSupport_id",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{invalid_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/updateSupport/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "updateSupport",
                "{{support_id}}"
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"A\", \"department_id\": \"1\", \"message\": \"B\"}"
            },
            "description": "EN: 401 Unauthenticated.\nTR: 401 Yetkisiz."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401', () => pm.response.code === 401);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_054_Verify_GET_support_id_after_update",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{support_id}}"
              ]
            },
            "description": "EN: Verify updated record.\nTR: Güncellenen kaydı doğrula."
          }
        }
      ]
    },
    {
      "name": "US_055 – DELETE /deleteSupport/{id}",
      "description": "EN: Delete a support record. / TR: Destek kaydını sil.",
      "item": [
        {
          "name": "US_055_Positive_DELETE_deleteSupport_id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/deleteSupport/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "deleteSupport",
                "{{support_id}}"
              ]
            },
            "description": "EN: 200 success, Successfully Deleted.\nTR: 200 success, Successfully Deleted."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', () => pm.response.code === 200);",
                  "const j = pm.response.json();",
                  "pm.test('remark success', () => j.remark === 'success');",
                  "pm.test('message deleted', () => (j.message||'').toLowerCase().includes('deleted'));"
                ]
              }
            }
          ]
        },
        {
          "name": "US_055_Negative_203_UnregisteredId_DELETE_deleteSupport_id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/deleteSupport/{{unregistered_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "deleteSupport",
                "{{unregistered_id}}"
              ]
            },
            "description": "EN: 203 failed - not found.\nTR: 203 failed - bulunamadı."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_055_Negative_203_NoId_DELETE_deleteSupport",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/deleteSupport/",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "deleteSupport",
                ""
              ]
            },
            "description": "EN: 203 failed - No id.\nTR: 203 failed - No id."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 203', () => pm.response.code === 203);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_055_Negative_401_InvalidToken_DELETE_deleteSupport_id",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{invalid_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/deleteSupport/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "deleteSupport",
                "{{support_id}}"
              ]
            },
            "description": "EN: 401 Unauthenticated.\nTR: 401 Yetkisiz."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 401', () => pm.response.code === 401);"
                ]
              }
            }
          ]
        },
        {
          "name": "US_055_Verify_GET_support_id_after_delete",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/support/{{support_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "support",
                "{{support_id}}"
              ]
            },
            "description": "EN: Verify record deleted.\nTR: Silinen kaydı doğrula."
          }
        }
      ]
    }
  ],
  "variable": []
}